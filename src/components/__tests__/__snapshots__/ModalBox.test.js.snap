// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ModalBox /> renders <svg> 1`] = `
<ModalBox
  currentUser="gibong@gmail.com"
  input="INPUT"
  posting={
    Object {
      "_id": "5e8ec52d9bb4913b5a844423",
      "id": 1,
      "imageUrl": "http://localhost:3000/static/images/1.jpg",
      "like": Array [
        "gibong@gmail.com",
      ],
      "tag": Array [
        "landscape",
      ],
      "title": "posting with id 1",
      "userName": "gibong@gmail.com",
    }
  }
>
  <ThreeRoundButtonSvg
    setIsOpen={[Function]}
  >
    <svg
      aria-label="옵션 더 보기"
      className="_8-yf5 "
      fill="#262626"
      height="16"
      onClick={[Function]}
      style={
        Object {
          "marginRight": "8px",
        }
      }
      viewBox="0 0 48 48"
      width="16"
    >
      <circle
        clipRule="evenodd"
        cx="8"
        cy="24"
        fillRule="evenodd"
        r="4.5"
      />
      <circle
        clipRule="evenodd"
        cx="24"
        cy="24"
        fillRule="evenodd"
        r="4.5"
      />
      <circle
        clipRule="evenodd"
        cx="40"
        cy="24"
        fillRule="evenodd"
        r="4.5"
      />
    </svg>
  </ThreeRoundButtonSvg>
  <EmotionCssPropInternal
    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ModalBox"
    __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
    css={
      Object {
        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vZGFsQm94LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFEb0IiLCJmaWxlIjoiTW9kYWxCb3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5pbXBvcnQgVGhyZWVSb3VuZEJ1dHRvblN2ZyBmcm9tICcuLi9zdmdJY29ucy9UaHJlZVJvdW5kQnV0dG9uU3ZnJztcbmltcG9ydCBFZGl0IGZyb20gJy4vRWRpdCc7XG5pbXBvcnQgUmVtb3ZlIGZyb20gJy4vUmVtb3ZlJztcblxuZnVuY3Rpb24gTW9kYWxCb3goeyBwb3N0aW5nLCBzZXRQb3N0aW5nLCBjdXJyZW50VXNlciwgaW5wdXQsIHBvc3RpbmdBbGwgfSkge1xuICBjb25zdCBbbW9kYWxJc09wZW4sIHNldElzT3Blbl0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG5cbiAgZnVuY3Rpb24gY2xvc2VNb2RhbCgpIHtcbiAgICBzZXRJc09wZW4oZmFsc2UpO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge2N1cnJlbnRVc2VyID09PSBwb3N0aW5nLnVzZXJOYW1lICYmIChcbiAgICAgICAgPFRocmVlUm91bmRCdXR0b25Tdmcgc2V0SXNPcGVuPXtzZXRJc09wZW59IC8+XG4gICAgICApfVxuICAgICAgPE1vZGFsIGlzT3Blbj17bW9kYWxJc09wZW59IG9uUmVxdWVzdENsb3NlPXtjbG9zZU1vZGFsfSBjc3M9e21vZGFsQ3NzfT5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtjbG9zZU1vZGFsfSBjc3M9e1tidXR0b25Dc3NdfT5cbiAgICAgICAgICDri6vquLBcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxFZGl0XG4gICAgICAgICAgcG9zdGluZz17cG9zdGluZ31cbiAgICAgICAgICBzZXRQb3N0aW5nPXtzZXRQb3N0aW5nfVxuICAgICAgICAgIGN1cnJlbnRVc2VyPXtjdXJyZW50VXNlcn1cbiAgICAgICAgICBlZGl0SW5wdXQ9e2lucHV0fVxuICAgICAgICAgIHNldElzT3Blbk1vZGFsQm94PXtzZXRJc09wZW59XG4gICAgICAgICAgcG9zdGluZ0FsbD17cG9zdGluZ0FsbH1cbiAgICAgICAgLz5cbiAgICAgICAgPFJlbW92ZVxuICAgICAgICAgIHBvc3Rpbmc9e3Bvc3Rpbmd9XG4gICAgICAgICAgc2V0UG9zdGluZz17c2V0UG9zdGluZ31cbiAgICAgICAgICBjdXJyZW50VXNlcj17Y3VycmVudFVzZXJ9XG4gICAgICAgICAgcG9zdGluZ0FsbD17cG9zdGluZ0FsbH1cbiAgICAgICAgLz5cbiAgICAgIDwvTW9kYWw+XG4gICAgPC8+XG4gICk7XG59XG5cbmNvbnN0IGJ1dHRvbkNzcyA9IGNzc2BcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSh2YXIoLS1kMGIsIDIxOSwgMjE5LCAyMTkpLCAxKTtcbiAgY29sb3I6IHJnYmEodmFyKC0tZjA3LCAzOCwgMzgsIDM4KSwgMSk7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogNDhweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbmA7XG5cbmNvbnN0IG1vZGFsQ3NzID0gY3NzYFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHJpZ2h0OiBhdXRvO1xuICBib3R0b206IGF1dG87XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMDQsIDIwNCwgMjA0KTtcbiAgYmFja2dyb3VuZDogcmdiKDI1NSwgMjU1LCAyNTUpO1xuICBvdmVyZmxvdzogYXV0bztcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgb3V0bGluZTogbm9uZTtcbiAgbWFyZ2luLXJpZ2h0OiAtNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuYDtcblxuY29uc3QgbWFyZ2luTGVmdDAgPSBjc3NgXG4gIG1hcmdpbi1sZWZ0OiAwcHg7XG5gO1xuXG5leHBvcnQgZGVmYXVsdCBNb2RhbEJveDtcbiJdfQ== */",
        "name": "102pzl3-modalCss",
        "styles": "position:absolute;top:50%;left:50%;right:auto;bottom:auto;border:1px solid rgb(204,204,204);background:rgb(255,255,255);overflow:auto;border-radius:12px;outline:none;margin-right:-50%;transform:translate(-50%,-50%);display:flex;flex-direction:column-reverse;;label:modalCss;",
        "toString": [Function],
      }
    }
    isOpen={false}
    onRequestClose={[Function]}
  >
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      className="css-102pzl3-modalCss"
      closeTimeoutMS={0}
      isOpen={false}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      role="dialog"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
    >
      <Portal
        containerInfo={
          <div
            class="ReactModalPortal"
          />
        }
      >
        <ModalPortal
          ariaHideApp={true}
          bodyOpenClassName="ReactModal__Body--open"
          className="css-102pzl3-modalCss"
          closeTimeoutMS={0}
          defaultStyles={
            Object {
              "content": Object {
                "WebkitOverflowScrolling": "touch",
                "background": "#fff",
                "border": "1px solid #ccc",
                "borderRadius": "4px",
                "bottom": "40px",
                "left": "40px",
                "outline": "none",
                "overflow": "auto",
                "padding": "20px",
                "position": "absolute",
                "right": "40px",
                "top": "40px",
              },
              "overlay": Object {
                "backgroundColor": "rgba(255, 255, 255, 0.75)",
                "bottom": 0,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
              },
            }
          }
          isOpen={false}
          onRequestClose={[Function]}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          role="dialog"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={true}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
          style={
            Object {
              "content": Object {},
              "overlay": Object {},
            }
          }
        />
      </Portal>
    </Modal>
  </EmotionCssPropInternal>
</ModalBox>
`;

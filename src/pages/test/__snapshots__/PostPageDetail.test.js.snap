// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PostPageDetail /> renders <div> 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "testKey",
        "pathname": "/1",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/1",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "testKey",
          "pathname": "/1",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Route
      exact={true}
      path="/:id"
    >
      <PostPageDetail
        UserOfActivePage="gibong@gmail.com"
        currentUser="gibong@gmail.com"
      >
        <div>
          <PostingList
            commentAPI={Array []}
            currentUser="gibong@gmail.com"
            posting={Array []}
            setCommentAPI={[Function]}
            setPosting={[Function]}
            sizeOfPicture={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <EmotionCssPropInternal
              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="PostingList"
              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
              css={
                Object {
                  "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvc3RpbmdMaXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZFZ0IiLCJmaWxlIjoiUG9zdGluZ0xpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xyXG5pbXBvcnQgU3dhbCBmcm9tICdzd2VldGFsZXJ0Mic7XHJcblxyXG5pbXBvcnQgUG9zdGluZyBmcm9tICcuL1Bvc3RpbmcnO1xyXG5pbXBvcnQgeyBhZGRDb21tZW50Rm9yUG9zdCB9IGZyb20gJy4uL2FwaXMvY29tbWVudCc7XHJcblxyXG5mdW5jdGlvbiBQb3N0aW5nTGlzdCh7XHJcbiAgcG9zdGluZyxcclxuICBzZXRQb3N0aW5nLFxyXG4gIHNpemVPZlBpY3R1cmUsXHJcbiAgdXNlck9mQWN0aXZlUGFnZSxcclxuICBzZXRVc2VyT2ZBY3RpdmVQYWdlLFxyXG4gIGN1cnJlbnRVc2VyLFxyXG4gIGNvbW1lbnRBUEksXHJcbiAgc2V0Q29tbWVudEFQSVxyXG59KSB7XHJcbiAgY29uc3QgW0lucHV0LCBzZXRJbnB1dF0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgLy8gY29uc3QgeyBjb21tZW50cyB9ID0gY29tbWVudFN0b3JhZ2U7XHJcblxyXG4gIGNvbnN0IG9uQ2hhbmdlQ29tbWVudCA9IGUgPT4ge1xyXG4gICAgc2V0SW5wdXQoZS50YXJnZXQudmFsdWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGFkZENvbW1lbnQgPSBhc3luYyAoXywgcG9zdElkLCBJbnB1dCwgdXNlcm5hbWUsIGluZGV4LCBjb21tZW50SWQpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYWRkQ29tbWVudEZvclBvc3QoXHJcbiAgICAgICAgcG9zdElkLFxyXG4gICAgICAgIElucHV0LFxyXG4gICAgICAgIGN1cnJlbnRVc2VyLFxyXG4gICAgICAgIGluZGV4LFxyXG4gICAgICAgIGNvbW1lbnRJZFxyXG4gICAgICApO1xyXG4gICAgICBzZXRDb21tZW50QVBJKHJlc3BvbnNlKTtcclxuICAgICAgc2V0SW5wdXQoJycpO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICBTd2FsLmZpcmUoe1xyXG4gICAgICAgIGljb246ICdlcnJvcicsXHJcbiAgICAgICAgdGl0bGU6ICdPb3BzLi4uJyxcclxuICAgICAgICB0ZXh0OiAnSW50ZXJuYWwgRXJyb3InXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8ZGl2IGNzcz17W3dyYXBdfT5cclxuICAgICAgICB7cG9zdGluZyAhPT0gdW5kZWZpbmVkICYmXHJcbiAgICAgICAgICBwb3N0aW5nXHJcbiAgICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiBiLmlkIC0gYS5pZClcclxuICAgICAgICAgICAgLm1hcChwb3N0aW5nMSA9PiAoXHJcbiAgICAgICAgICAgICAgPHVsXHJcbiAgICAgICAgICAgICAgICBrZXk9e3Bvc3RpbmcxLmlkfVxyXG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luVG9wOiAnOTBweCcsIG1hcmdpbkJvdHRvbTogJy0yMHB4JyB9fVxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIDxQb3N0aW5nXHJcbiAgICAgICAgICAgICAgICAgIHBvc3Rpbmc9e3Bvc3RpbmcxfVxyXG4gICAgICAgICAgICAgICAgICBwb3N0aW5nQWxsPXtwb3N0aW5nfVxyXG4gICAgICAgICAgICAgICAgICBzZXRQb3N0aW5nPXtzZXRQb3N0aW5nfVxyXG4gICAgICAgICAgICAgICAgICAvLyBjb21tZW50cz17Y29tbWVudHN9XHJcbiAgICAgICAgICAgICAgICAgIGFkZENvbW1lbnQ9e2FkZENvbW1lbnR9XHJcbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlQ29tbWVudD17b25DaGFuZ2VDb21tZW50fVxyXG4gICAgICAgICAgICAgICAgICBzaXplT2ZQaWN0dXJlPXtzaXplT2ZQaWN0dXJlfVxyXG4gICAgICAgICAgICAgICAgICB1c2VyT2ZBY3RpdmVQYWdlPXt1c2VyT2ZBY3RpdmVQYWdlfVxyXG4gICAgICAgICAgICAgICAgICBzZXRVc2VyT2ZBY3RpdmVQYWdlPXtzZXRVc2VyT2ZBY3RpdmVQYWdlfVxyXG4gICAgICAgICAgICAgICAgICBjdXJyZW50VXNlcj17Y3VycmVudFVzZXJ9XHJcbiAgICAgICAgICAgICAgICAgIGNvbW1lbnRBUEk9e2NvbW1lbnRBUEl9XHJcbiAgICAgICAgICAgICAgICAgIHNldENvbW1lbnRBUEk9e3NldENvbW1lbnRBUEl9XHJcbiAgICAgICAgICAgICAgICAgIHNldElucHV0PXtJbnB1dH1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgKSl9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC8+XHJcbiAgKTtcclxufVxyXG5cclxuY29uc3Qgd3JhcCA9IGNzc2BcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxMDBweDtcclxuYDtcclxuXHJcbi8vIFBvc3RpbmdMaXN0LnByb3BUeXBlcyA9IHtcclxuLy8gICB1c2VyT2ZBY3RpdmVQYWdlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4vLyAgIHNldFVzZXJPZkFjdGl2ZVBhZ2U6IFByb3BUeXBlcy5mdW5jLFxyXG4vLyAgIGN1cnJlbnRVc2VyOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4vLyAgIHNpemVPZlBpY3R1cmU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5zdHJpbmddKSxcclxuLy8gICBwb3N0aW5nOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuYXJyYXldKSxcclxuLy8gICBzZXRQb3N0aW5nOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXHJcbi8vICAgcG9zdGluZ0RldGFpbDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZ10pLFxyXG4vLyAgIGNvbW1lbnRBUEk6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5hcnJheV0pLFxyXG4vLyAgIHNldENvbW1lbnRBUEk6IFByb3BUeXBlcy5lbGVtZW50VHlwZVxyXG4vLyB9O1xyXG5cclxuLy8gUG9zdGluZ0xpc3QuZGVmYXVsdFByb3BzID0ge1xyXG4vLyAgIHVzZXJPZkFjdGl2ZVBhZ2U6IFwiXCIsXHJcbi8vICAgc2V0VXNlck9mQWN0aXZlUGFnZTogXCJcIixcclxuLy8gICBjdXJyZW50VXNlcjogXCJcIixcclxuLy8gICBzaXplT2ZQaWN0dXJlOiAwLFxyXG4vLyAgIHBvc3RpbmdEZXRhaWw6IHVuZGVmaW5lZCxcclxuLy8gICBmb2xsb3dlcjogW1wiXCJdXHJcbi8vIH07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3N0aW5nTGlzdDtcclxuIl19 */",
                  "name": "13e06tw-wrap-PostingList",
                  "next": undefined,
                  "styles": "display:flex;flex-wrap:wrap;flex-direction:column;justify-content:center;align-content:center;margin-bottom:100px;;label:wrap;;;label:PostingList;/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvc3RpbmdMaXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThDVyIsImZpbGUiOiJQb3N0aW5nTGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XHJcbmltcG9ydCBTd2FsIGZyb20gJ3N3ZWV0YWxlcnQyJztcclxuXHJcbmltcG9ydCBQb3N0aW5nIGZyb20gJy4vUG9zdGluZyc7XHJcbmltcG9ydCB7IGFkZENvbW1lbnRGb3JQb3N0IH0gZnJvbSAnLi4vYXBpcy9jb21tZW50JztcclxuXHJcbmZ1bmN0aW9uIFBvc3RpbmdMaXN0KHtcclxuICBwb3N0aW5nLFxyXG4gIHNldFBvc3RpbmcsXHJcbiAgc2l6ZU9mUGljdHVyZSxcclxuICB1c2VyT2ZBY3RpdmVQYWdlLFxyXG4gIHNldFVzZXJPZkFjdGl2ZVBhZ2UsXHJcbiAgY3VycmVudFVzZXIsXHJcbiAgY29tbWVudEFQSSxcclxuICBzZXRDb21tZW50QVBJXHJcbn0pIHtcclxuICBjb25zdCBbSW5wdXQsIHNldElucHV0XSA9IHVzZVN0YXRlKCcnKTtcclxuICAvLyBjb25zdCB7IGNvbW1lbnRzIH0gPSBjb21tZW50U3RvcmFnZTtcclxuXHJcbiAgY29uc3Qgb25DaGFuZ2VDb21tZW50ID0gZSA9PiB7XHJcbiAgICBzZXRJbnB1dChlLnRhcmdldC52YWx1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgYWRkQ29tbWVudCA9IGFzeW5jIChfLCBwb3N0SWQsIElucHV0LCB1c2VybmFtZSwgaW5kZXgsIGNvbW1lbnRJZCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhZGRDb21tZW50Rm9yUG9zdChcclxuICAgICAgICBwb3N0SWQsXHJcbiAgICAgICAgSW5wdXQsXHJcbiAgICAgICAgY3VycmVudFVzZXIsXHJcbiAgICAgICAgaW5kZXgsXHJcbiAgICAgICAgY29tbWVudElkXHJcbiAgICAgICk7XHJcbiAgICAgIHNldENvbW1lbnRBUEkocmVzcG9uc2UpO1xyXG4gICAgICBzZXRJbnB1dCgnJyk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIFN3YWwuZmlyZSh7XHJcbiAgICAgICAgaWNvbjogJ2Vycm9yJyxcclxuICAgICAgICB0aXRsZTogJ09vcHMuLi4nLFxyXG4gICAgICAgIHRleHQ6ICdJbnRlcm5hbCBFcnJvcidcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxkaXYgY3NzPXtbd3JhcF19PlxyXG4gICAgICAgIHtwb3N0aW5nICE9PSB1bmRlZmluZWQgJiZcclxuICAgICAgICAgIHBvc3RpbmdcclxuICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IGIuaWQgLSBhLmlkKVxyXG4gICAgICAgICAgICAubWFwKHBvc3RpbmcxID0+IChcclxuICAgICAgICAgICAgICA8dWxcclxuICAgICAgICAgICAgICAgIGtleT17cG9zdGluZzEuaWR9XHJcbiAgICAgICAgICAgICAgICBzdHlsZT17eyBtYXJnaW5Ub3A6ICc5MHB4JywgbWFyZ2luQm90dG9tOiAnLTIwcHgnIH19XHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPFBvc3RpbmdcclxuICAgICAgICAgICAgICAgICAgcG9zdGluZz17cG9zdGluZzF9XHJcbiAgICAgICAgICAgICAgICAgIHBvc3RpbmdBbGw9e3Bvc3Rpbmd9XHJcbiAgICAgICAgICAgICAgICAgIHNldFBvc3Rpbmc9e3NldFBvc3Rpbmd9XHJcbiAgICAgICAgICAgICAgICAgIC8vIGNvbW1lbnRzPXtjb21tZW50c31cclxuICAgICAgICAgICAgICAgICAgYWRkQ29tbWVudD17YWRkQ29tbWVudH1cclxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2VDb21tZW50PXtvbkNoYW5nZUNvbW1lbnR9XHJcbiAgICAgICAgICAgICAgICAgIHNpemVPZlBpY3R1cmU9e3NpemVPZlBpY3R1cmV9XHJcbiAgICAgICAgICAgICAgICAgIHVzZXJPZkFjdGl2ZVBhZ2U9e3VzZXJPZkFjdGl2ZVBhZ2V9XHJcbiAgICAgICAgICAgICAgICAgIHNldFVzZXJPZkFjdGl2ZVBhZ2U9e3NldFVzZXJPZkFjdGl2ZVBhZ2V9XHJcbiAgICAgICAgICAgICAgICAgIGN1cnJlbnRVc2VyPXtjdXJyZW50VXNlcn1cclxuICAgICAgICAgICAgICAgICAgY29tbWVudEFQST17Y29tbWVudEFQSX1cclxuICAgICAgICAgICAgICAgICAgc2V0Q29tbWVudEFQST17c2V0Q29tbWVudEFQSX1cclxuICAgICAgICAgICAgICAgICAgc2V0SW5wdXQ9e0lucHV0fVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICApKX1cclxuICAgICAgPC9kaXY+XHJcbiAgICA8Lz5cclxuICApO1xyXG59XHJcblxyXG5jb25zdCB3cmFwID0gY3NzYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG5gO1xyXG5cclxuLy8gUG9zdGluZ0xpc3QucHJvcFR5cGVzID0ge1xyXG4vLyAgIHVzZXJPZkFjdGl2ZVBhZ2U6IFByb3BUeXBlcy5zdHJpbmcsXHJcbi8vICAgc2V0VXNlck9mQWN0aXZlUGFnZTogUHJvcFR5cGVzLmZ1bmMsXHJcbi8vICAgY3VycmVudFVzZXI6IFByb3BUeXBlcy5zdHJpbmcsXHJcbi8vICAgc2l6ZU9mUGljdHVyZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZ10pLFxyXG4vLyAgIHBvc3Rpbmc6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5hcnJheV0pLFxyXG4vLyAgIHNldFBvc3Rpbmc6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcclxuLy8gICBwb3N0aW5nRGV0YWlsOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nXSksXHJcbi8vICAgY29tbWVudEFQSTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5XSksXHJcbi8vICAgc2V0Q29tbWVudEFQSTogUHJvcFR5cGVzLmVsZW1lbnRUeXBlXHJcbi8vIH07XHJcblxyXG4vLyBQb3N0aW5nTGlzdC5kZWZhdWx0UHJvcHMgPSB7XHJcbi8vICAgdXNlck9mQWN0aXZlUGFnZTogXCJcIixcclxuLy8gICBzZXRVc2VyT2ZBY3RpdmVQYWdlOiBcIlwiLFxyXG4vLyAgIGN1cnJlbnRVc2VyOiBcIlwiLFxyXG4vLyAgIHNpemVPZlBpY3R1cmU6IDAsXHJcbi8vICAgcG9zdGluZ0RldGFpbDogdW5kZWZpbmVkLFxyXG4vLyAgIGZvbGxvd2VyOiBbXCJcIl1cclxuLy8gfTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvc3RpbmdMaXN0O1xyXG4iXX0= */",
                  "toString": [Function],
                }
              }
            >
              <div
                className="css-13e06tw-wrap-PostingList"
              />
            </EmotionCssPropInternal>
          </PostingList>
        </div>
      </PostPageDetail>
    </Route>
  </Router>
</MemoryRouter>
`;
